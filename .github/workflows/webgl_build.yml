name: Actions ðŸ˜Ž

on: [push, pull_request]

jobs:
  build:
    name: Build my project âœ¨
    runs-on: ubuntu-latest
    steps:
      - name: Free up disk space
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo apt-get clean
          df -h

      - name: Clean up Docker system
        run: |
          docker system prune --all --force
          df -h

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Set CompressionFormat to Disabled
        run: |
          sed -i -e 's/webGLCompressionFormat: ./webGLCompressionFormat: 2/' ProjectSettings/ProjectSettings.asset

      - uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-

      - name: Run tests
        uses: game-ci/unity-test-runner@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}

      - name: Build project
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: WebGL
          unityVersion: 6000.0.30f1
          allowDirtyBuild: true

      # Save Unity Editor Log (in case of failure)
      - name: Save Unity Editor Log
        if: failure()
        run: |
          mkdir -p artifacts
          if [ -f ~/.config/unity3d/Editor.log ]; then
            cp ~/.config/unity3d/Editor.log artifacts/
          else
            echo "Editor.log not found!"
          fi
      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: UnityBuildLog
          path: artifacts/Editor.log

  deploy:
    name: Deploy to GitHub Pages âœ¨
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write
      pages: write
    environment:
      name: github-pages

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download the build artifact
        uses: actions/download-artifact@v3
        with:
          name: Build
          path: build

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v2
        with:
          path: build
